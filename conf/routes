# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~


# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)

# user/admin stuff
GET /                               controllers.LandingPageController.showLandingPage
GET  /login                         controllers.UserController.showLoginForm
POST /doLogin                       controllers.UserController.processLoginAttempt
GET /welcome                        controllers.LandingPageController.showLandingPage
GET /logout                         controllers.AuthenticatedUserController.logout
GET /profile                        controllers.AuthenticatedUserController.profile
POST /profile                       controllers.AuthenticatedUserController.changePassword

GET /admin                          controllers.AuthenticatedUserController.admin
GET /admin/users                    controllers.AuthenticatedUserController.adminUsers
GET /admin/users/create             controllers.AuthenticatedUserController.adminUsersCreateView
GET /admin/users/update             controllers.AuthenticatedUserController.adminUsersUpdateView
GET /admin/users/delete             controllers.AuthenticatedUserController.adminUsersDeleteView
POST /admin/users/update            controllers.AuthenticatedUserController.adminUpdateUser
POST /admin/users/create            controllers.AuthenticatedUserController.adminCreateUser
POST /admin/users/delete            controllers.AuthenticatedUserController.adminDeleteUser

GET /map                            controllers.MapController.showMapPage
GET /routes                         controllers.RouteController.showRouteListPage(nrRoutes: Boolean ?=true, srs: String ?= "all", name: String ?= "all", id: String ?= "all")
GET /route/detail/:from/:to         controllers.RouteController.showRouteDetailPage(from: String, to: String)
GET /locations                      controllers.LocationController.showLocationListPage(orrStations: Boolean ?=true, operator: String ?= "all", name: String ?= "all", id: String ?= "all")
GET /location/detail/:id            controllers.LocationController.showLocationDetailPage(id: String)


GET /api/location/map               controllers.ApiAuthenticatedController.getLocationsForMap
GET /api/location/list/default      controllers.ApiAuthenticatedController.getLocationsForList
GET /api/location/:id               controllers.ApiAuthenticatedController.getLocation(id: String)

GET /api/route/map                  controllers.ApiAuthenticatedController.getRoutesForMap
GET /api/route/list/default         controllers.ApiAuthenticatedController.getRoutesForList
GET /api/route/:from/:to            controllers.ApiAuthenticatedController.getRoute(from: String, to: String)

GET /api/visit/locations             controllers.ApiAuthenticatedController.getAllVisitsForLocations()
GET /api/visit/location/:id         controllers.ApiAuthenticatedController.getAllVisitsForLocation(id: String)
POST /api/visit/location            controllers.ApiAuthenticatedController.visitLocation
POST /api/visit/location/:id        controllers.ApiAuthenticatedController.visitLocationWithParams(id: String)
POST /api/visit/location/list/:id        controllers.ApiAuthenticatedController.visitLocationFromList(id: String)
POST /api/visit/location/delete/last/:id controllers.ApiAuthenticatedController.removeLastVisitForLocation(id: String)
POST /api/visit/location/delete/all/:id  controllers.ApiAuthenticatedController.removeAllVisitsForLocation(id: String)

GET /api/visit/route                    controllers.ApiAuthenticatedController.getAllVisitsForRoutes()
GET /api/visit/route/:from/:to          controllers.ApiAuthenticatedController.getAllVisitsForRoute(from: String, to: String)
POST /api/visit/route                   controllers.ApiAuthenticatedController.visitRoute
POST /api/visit/route/:from/:to         controllers.ApiAuthenticatedController.visitRouteWithParams(from: String, to: String)
POST /api/visit/route/list/:from/:to         controllers.ApiAuthenticatedController.visitRouteFromList(from: String, to: String)
POST /api/visit/route/delete/last/:from/:to    controllers.ApiAuthenticatedController.removeLastVisitForRoute(from: String, to: String)
POST /api/visit/route/delete/all/:from/:to     controllers.ApiAuthenticatedController.removeAllVisitsForRoute(from: String, to: String)
